<h1 id='cliclopts'>cliclopts</h1>
<p><a href="https://nodei.co/npm/cliclopts/"><img src="https://nodei.co/npm/cliclopts.png" alt="NPM" /></a></p>

<p><img src="/includes/node_modules/cliclopts/cliclopts-8ae8de14.png" alt="cliclopts" /></p>

<p>Command line options helper and usage printer, works well with <a href="https://www.npmjs.com/package/minimist">minimist</a>, inspired by <a href="https://www.npmjs.com/package/nomnom">nomnom</a></p>

<p><a href="https://github.com/feross/standard"><img src="https://cdn.rawgit.com/feross/standard/master/badge.svg" alt="js-standard-style" /></a></p>
<h2 id='usage'>usage</h2>
<p>Define the allowed options in an array and pass it to &#39;cliclopts&#39;</p>
<pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">cliclopts</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'cliclopts'</span><span class="p">)</span>

<span class="kd">var</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="s1">'verbose'</span><span class="p">,</span>
    <span class="na">abbr</span><span class="p">:</span> <span class="s1">'v'</span><span class="p">,</span>
    <span class="na">alias</span><span class="p">:</span> <span class="p">[</span><span class="s1">'loud'</span><span class="p">],</span>
    <span class="na">boolean</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">help</span><span class="p">:</span> <span class="s1">'be verbose'</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="s1">'path'</span><span class="p">,</span>
    <span class="na">abbr</span><span class="p">:</span> <span class="s1">'p'</span><span class="p">,</span>
    <span class="na">default</span><span class="p">:</span> <span class="s1">'./dat.json'</span><span class="p">,</span>
    <span class="na">help</span><span class="p">:</span> <span class="s1">'path to file'</span>
  <span class="p">}</span>
<span class="p">]</span>

<span class="kd">var</span> <span class="nx">cliOpts</span> <span class="o">=</span> <span class="nx">cliclopts</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span>
</code></pre><h3 id='cliclopts-options'>cliclopts(options)</h3>
<p>options is an array of objects with the following possible keys:</p>

<ul>
<li><code>name</code> primary name of option</li>
<li><code>abbr</code> one character alias of the option</li>
<li><code>alias</code> other options treated as alias</li>
<li><code>boolean</code> if true the option is seen as a boolean flag</li>
<li><code>help</code> usage string for the option</li>
<li><code>default</code> default value of the option</li>
</ul>
<h3 id='cliopts-usage'>cliOpts.usage()</h3>
<p>Returns the usage information as string:</p>
<pre class="highlight plaintext"><code>--verbose, -v         be verbose
--path, -p            path to file (default: "dat.json")
</code></pre><h3 id='cliopts-print'>cliOpts.print()</h3>
<p>Prints the usage information.</p>
<h3 id='cliopts-boolean'>cliOpts.boolean()</h3>
<p>Returns Array of all command names that are specified as boolean.</p>
<h3 id='cliopts-alias'>cliOpts.alias()</h3>
<p>Returns Object with command names as keys and alias list as value (including abbr)</p>
<h3 id='cliopts-default'>cliOpts.default()</h3>
<p>Returns Object with command names as keys and default values as values.</p>
<h3 id='cliopts-options'>cliOpts.options()</h3>
<p>Returns
<code>js
{
  alias: cliOpts.alias(),
  boolean: cliOpts.boolean(),
  default: cliOpts.default()
}
</code></p>
<h2 id='example-usage-with-minimist'>Example usage with <code>minimist</code></h2><pre class="highlight javascript"><code><span class="kd">var</span> <span class="nx">allowedOptions</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="s1">'verbose'</span><span class="p">,</span>
    <span class="na">abbr</span><span class="p">:</span> <span class="s1">'v'</span><span class="p">,</span>
    <span class="na">alias</span><span class="p">:</span> <span class="p">[</span><span class="s1">'cry-at-me'</span><span class="p">],</span>
    <span class="na">boolean</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">help</span><span class="p">:</span> <span class="s1">'be verbose'</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="s1">'path'</span><span class="p">,</span>
    <span class="na">abbr</span><span class="p">:</span> <span class="s1">'p'</span><span class="p">,</span>
    <span class="na">help</span><span class="p">:</span> <span class="s1">'path to the file'</span>
  <span class="p">},</span>
  <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="s1">'help'</span><span class="p">,</span>
    <span class="na">abbr</span><span class="p">:</span> <span class="s1">'h'</span><span class="p">,</span>
    <span class="na">help</span><span class="p">:</span> <span class="s1">'show help'</span><span class="p">,</span>
    <span class="na">boolean</span><span class="p">:</span> <span class="kc">true</span>
  <span class="p">}</span>
<span class="p">]</span>

<span class="kd">var</span> <span class="nx">cliOpts</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'cliclopts'</span><span class="p">)(</span><span class="nx">allowedOptions</span><span class="p">)</span>

<span class="kd">var</span> <span class="nx">argv</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'minimist'</span><span class="p">)(</span><span class="nx">process</span><span class="p">.</span><span class="nx">argv</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span> <span class="nx">cliOpts</span><span class="p">.</span><span class="nx">options</span><span class="p">())</span>

<span class="k">if</span> <span class="p">(</span><span class="nx">argv</span><span class="p">.</span><span class="nx">help</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Usage: command [options]'</span><span class="p">)</span>
  <span class="nx">cliOpts</span><span class="p">.</span><span class="nx">print</span><span class="p">()</span>
  <span class="nx">process</span><span class="p">.</span><span class="nx">exit</span><span class="p">()</span>
<span class="p">}</span>

<span class="nx">yourprogram</span><span class="p">(</span><span class="nx">argv</span><span class="p">)</span>
</code></pre>