#!/usr/bin/env node
"use strict";function readFile(e,r,o){if("-"===options.file){var t=[];process.stdin.on("data",function(e){t.push(e)}),process.stdin.on("end",function(){return o(null,Buffer.concat(t).toString(r))})}else fs.readFile(e,r,o)}var fs=require("fs"),argparse=require("argparse"),yaml=require(".."),cli=new argparse.ArgumentParser({prog:"js-yaml",version:require("../package.json").version,addHelp:!0});cli.addArgument(["-c","--compact"],{help:"Display errors in compact mode",action:"storeTrue"}),cli.addArgument(["-j","--to-json"],{help:argparse.Const.SUPPRESS,dest:"json",action:"storeTrue"}),cli.addArgument(["-t","--trace"],{help:"Show stack trace on error",action:"storeTrue"}),cli.addArgument(["file"],{help:"File to read, utf-8 encoded without BOM",nargs:"?",defaultValue:"-"});var options=cli.parseArgs();readFile(options.file,"utf8",function(e,r){var o,t;e&&("ENOENT"===e.code&&(console.error("File not found: "+options.file),process.exit(2)),console.error(options.trace&&e.stack||e.message||String(e)),process.exit(1));try{o=JSON.parse(r),t=!1}catch(e){if(e instanceof SyntaxError)try{o=[],yaml.loadAll(r,function(e){o.push(e)},{}),t=!0,0===o.length?o=null:1===o.length&&(o=o[0])}catch(r){options.trace&&e.stack?console.error(r.stack):console.error(r.toString(options.compact)),process.exit(1)}else console.error(options.trace&&e.stack||e.message||String(e)),process.exit(1)}t?console.log(JSON.stringify(o,null,"  ")):console.log(yaml.dump(o))});