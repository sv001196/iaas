<p><a href="https://www.npmjs.com/package/esprima"><img src="https://img.shields.io/npm/v/esprima.svg" alt="NPM version" /></a>
<a href="https://www.npmjs.com/package/esprima"><img src="https://img.shields.io/npm/dm/esprima.svg" alt="npm download" /></a>
<a href="https://travis-ci.org/jquery/esprima"><img src="https://img.shields.io/travis/jquery/esprima/master.svg" alt="Build Status" /></a>
<a href="https://codecov.io/github/jquery/esprima"><img src="https://img.shields.io/codecov/c/github/jquery/esprima/master.svg" alt="Coverage Status" /></a></p>

<p><strong>Esprima</strong> (<a href="http://esprima.org">esprima.org</a>, BSD license) is a high performance,
standard-compliant <a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMAScript</a>
parser written in ECMAScript (also popularly known as
<a href="https://en.wikipedia.org/wiki/JavaScript">JavaScript</a>).
Esprima is created and maintained by <a href="https://twitter.com/ariyahidayat">Ariya Hidayat</a>,
with the help of <a href="https://github.com/jquery/esprima/contributors">many contributors</a>.</p>
<h3 id='features'>Features</h3>
<ul>
<li>Full support for ECMAScript 2017 (<a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMA-262 8th Edition</a>)</li>
<li>Sensible <a href="https://github.com/estree/estree/blob/master/es5.md">syntax tree format</a> as standardized by <a href="https://github.com/estree/estree">ESTree project</a></li>
<li>Experimental support for <a href="https://facebook.github.io/jsx/">JSX</a>, a syntax extension for <a href="https://facebook.github.io/react/">React</a></li>
<li>Optional tracking of syntax node location (index-based and line-column)</li>
<li><a href="http://esprima.org/test/ci.html">Heavily tested</a> (~1500 <a href="https://github.com/jquery/esprima/tree/master/test/fixtures">unit tests</a> with <a href="https://codecov.io/github/jquery/esprima">full code coverage</a>)</li>
</ul>
<h3 id='api'>API</h3>
<p>Esprima can be used to perform <a href="https://en.wikipedia.org/wiki/Lexical_analysis">lexical analysis</a> (tokenization) or <a href="https://en.wikipedia.org/wiki/Parsing">syntactic analysis</a> (parsing) of a JavaScript program.</p>

<p>A simple example on Node.js REPL:</p>
<pre class="highlight javascript tab-javascript"><code><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">esprima</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'esprima'</span><span class="p">);</span>
<span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">program</span> <span class="o">=</span> <span class="s1">'const answer = 42'</span><span class="p">;</span>

<span class="o">&gt;</span> <span class="nx">esprima</span><span class="p">.</span><span class="nx">tokenize</span><span class="p">(</span><span class="nx">program</span><span class="p">);</span>
<span class="p">[</span> <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Keyword'</span><span class="p">,</span> <span class="na">value</span><span class="p">:</span> <span class="s1">'const'</span> <span class="p">},</span>
  <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Identifier'</span><span class="p">,</span> <span class="na">value</span><span class="p">:</span> <span class="s1">'answer'</span> <span class="p">},</span>
  <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Punctuator'</span><span class="p">,</span> <span class="na">value</span><span class="p">:</span> <span class="s1">'='</span> <span class="p">},</span>
  <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'Numeric'</span><span class="p">,</span> <span class="na">value</span><span class="p">:</span> <span class="s1">'42'</span> <span class="p">}</span> <span class="p">]</span>

<span class="o">&gt;</span> <span class="nx">esprima</span><span class="p">.</span><span class="nx">parseScript</span><span class="p">(</span><span class="nx">program</span><span class="p">);</span>
<span class="p">{</span> <span class="nl">type</span><span class="p">:</span> <span class="s1">'Program'</span><span class="p">,</span>
  <span class="nx">body</span><span class="p">:</span>
   <span class="p">[</span> <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="s1">'VariableDeclaration'</span><span class="p">,</span>
       <span class="na">declarations</span><span class="p">:</span> <span class="p">[</span><span class="nb">Object</span><span class="p">],</span>
       <span class="na">kind</span><span class="p">:</span> <span class="s1">'const'</span> <span class="p">}</span> <span class="p">],</span>
  <span class="nx">sourceType</span><span class="p">:</span> <span class="s1">'script'</span> <span class="p">}</span>
</code></pre>
<p>For more information, please read the <a href="http://esprima.org/doc">complete documentation</a>.</p>
